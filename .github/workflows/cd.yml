name: CD

on:
  push:
    branches: ["master"]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script_stop: true
          script: |
            cd ~/mybot
            git fetch origin master
            git reset --hard origin/master
            git pull origin master

            # Генерируем .env построчно через echo
            echo "SA_PASSWORD=\"${{ secrets.SA_PASSWORD }}\"" > .env
            echo "RABBITMQ_USER=\"${{ secrets.RABBITMQ_USER }}\"" >> .env
            echo "RABBITMQ_PASS=\"${{ secrets.RABBITMQ_PASS }}\"" >> .env
            echo "TELEGRAM__BOTTOKEN=\"${{ secrets.TELEGRAM_TOKEN }}\"" >> .env
            echo "DOMAIN=${{ secrets.DOMAIN }}" >> .env
            echo "REDIS_HOST=redis" >> .env
            echo "REDIS_PORT=6379" >> .env
            echo "RABBITMQ_HOST=rabbitmq" >> .env
            echo "RABBITMQ_PORT=5672" >> .env
            echo "DB_CONNECTION_STRING=\"Server=sqlserver,1433;User Id=sa;Password=${{ secrets.SA_PASSWORD }};TrustServerCertificate=true;Encrypt=false;\"" >> .env


            docker compose pull || true
            docker compose up -d --build
            docker image prune -f

      - name: Set Telegram Webhook
        run: |
          curl -X POST \
            "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/setWebhook" \
            -d "url=https://${{ secrets.DOMAIN }}/api/webhook"
